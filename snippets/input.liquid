{% style %}
  .input-wrapper {
    position: relative;
    margin-top: 30px;
    /* To create space for floating */
    margin-inline: auto;
    max-width: 400px;
    border: 0.0625rem solid #000;
    border-radius: 0.5rem;
  }

  /* Change the entire wrapper border color when focused within */
  .input-wrapper:focus-within {
    border-color: #0085CA;
  }

  .custom-input {
    font-size: 2rem;
    height: 5.6rem;
    width: 100%;
    padding: 1.5rem 1.6rem 0.5rem;
    font-size: 1.6rem;
    font-weight: 400;
    line-height: 1.375;
    color: #000;
    border: none;
    transition: border-color 250ms;
    background-color: transparent;
  }

  .custom-input:focus {
    outline: none;
    outline-offset: none;
    box-shadow: none
  }

  .custom-input:focus-visible{
    outline:none;
  }

  .custom-input::placeholder {
    color: transparent;
  }

  /* Hide Safari's autofill button */
  .custom-input::-webkit-contacts-auto-fill-button {
    visibility: hidden;
    pointer-events: none;
    position: absolute;
  }

  /* Change the border color of the wrapper on input focus */
  .custom-input:focus ~ .input-wrapper {
    border-color: #0085CA;
  }


  .label {
    font-size: 1.6rem;
    position: absolute;
    top: 1.6rem;
    left: 1.6rem;
    color: #43454e;
    font-weight: 400;
    line-height: 1.375;
    pointer-events: none;
    transform-origin: left center;
    transition: transform 250ms;
  }

  .icon{
     position: absolute;
    top: 1.6rem;
    right: 1.6rem;
    cursor:pointer;
  }

  .custom-input:focus + .label {
    color: #0085CA;
  }

  .custom-input:focus + .label,
  .custom-input:not(:placeholder-shown) + .label {
    transform: translateY(-60%) scale(0.65);
  }

  .hidden{
    display:none;
  }

  .clear {
    cursor: pointer;
    appearance: none;
    -webkit-appearance: none;
    position: absolute;
    top: 50%;
    right: -9px;
    /* To visually align with inputs right edge */
    transform: translateY(-50%);
    background: none;
    border: none;
    border-radius: 50%;
    height: 30px;
    width: 30px;
    color: #777;
    transition: color 250ms;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .clear:hover,
  .clear:focus {
    color: #333;
  }

  .custom-input:placeholder-shown + .label + .clear {
    display: none;
  }
{% endstyle %}


<div class="input-wrapper">
  <!--
    Input needs to have a placeholder in order to use :placeholder-shown pseudo class in Safari.
    We then hide it using CSS.
  -->
  <input
    class="custom-input"
    type="{{ input_type }}"
    name="{{ input_name }}"
    id="{{ input_id }}"
    {% if input_value %}
      value="{{ input_value }}"
    {% endif %}
    autocomplete="{{ input_autocomplete }}"
    placeholder="{{ input_placeholder }}"
    {% if input_spellcheck %}
      spellcheck="{{ input_spellcheck }}"
    {% endif %}
    {% if input_autocapitalize %}
      autocapitalize="{{ input_autocapitalize }}"
    {% endif %}
    {% if input_aria_required %}
      aria-required="{{ input_aria_required }}"
    {% endif %}
    {% if input_aria_invalid %}
      aria-invalid="{{ input_aria_invalid }}"
    {% endif %}
    {% if input_aria_describedby %}
      aria-describedby="{{ input_aria_describedby }}"
    {% endif %}
  >
  <label class="label" for="{{ input_id }}">
    {{ input_label }}
  </label>

  {% if input_type == 'password' %}
    <div type="button" class="icon toggle-password" aria-label="Toggle password visibility">
      <div>{% render 'icon-eye-open' %}</div>
      <div class="hidden">{% render 'icon-eye-closed' %}</div>
    </div>
  {% endif %}

 {% if info_icon %}
    <div type="button" class="icon info-icon" aria-label="Toggle password visibility">
      <div>{% render 'icon-input-info' %}</div>
    </div>
  {% endif %}
</div>

<!--
  <div class="input-wrapper">
    <input autocomplete="off" class="input" type="email" id="email" placeholder="Email" />
    <label class="label" for="email">
      Email
    </label>
    <button class="clear" aria-label="Clear input">
      <svg viewBox="0 0 16 16" width="12" height="12">
        <path d="M 1 1 L 15 15 M 1 15 L 15 1" fill="none" stroke-width="2" stroke="currentColor" />
      </svg>
    </button>
  </div>
-->
